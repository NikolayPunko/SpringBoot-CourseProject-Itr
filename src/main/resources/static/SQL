create table Users(
                     id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                     username varchar(30) NOT NULL ,
                     email varchar(50) not null unique,
                     password varchar NOT NULL,
                     status varchar(10) NOT NULL ,
                     user_role varchar(15) NOT NULL
);

INSERT INTO Users(username, year_of_birth, "password") VALUES ('test_user1', 1960, 'test_password');

ALTER TABLE Users
ALTER COLUMN password TYPE VARCHAR;

create table Collections(
                     id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                     user_id int REFERENCES Users(id) On DELETE CASCADE,
                     name varchar(50) NOT NULL ,
                     description varchar(1000) not null,
                     markdown varchar not null,
                     topic varchar(20) NOT NULL,
                     url_photo varchar(200),

                     bitmask int not null,

                     first_numeric_field varchar(50),
                     second_numeric_field varchar(50),
                     third_numeric_field varchar(50),

                     first_string_field varchar(50),
                     second_string_field varchar(50),
                     third_string_field varchar(50),

                     first_text_field varchar(50),
                     second_text_field varchar(50),
                     third_text_field varchar(50),

                     first_boolean_field varchar(50),
                     second_boolean_field varchar(50),
                     third_boolean_field varchar(50),

                     first_date_field varchar(50),
                     second_date_field varchar(50),
                     third_date_field varchar(50)

);



select * from Users;

select * from Collections;

select * from Items;

select * from Tags;

select * from Items_Tags;



drop table Items;

drop table Items_Tags;



INSERT INTO Person(username, year_of_birth, "password") VALUES ('test_user1', 1960, 'test_password');
INSERT INTO Person(username, year_of_birth, "password") VALUES ('test_user2', 1970, 'test_password');


TRUNCATE TABLE Person; //удаляет записи в таблице

alter table Person ADD COLUMN role varchar(100) NOT NULL;

UPDATE Person SET role='ROLE_ADMIN' where id=6;








create table Items(
                     id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                     collection_id int REFERENCES Collections(id) On DELETE CASCADE,
                     name varchar(50),

                     first_numeric_field int,
                     second_numeric_field int,
                     third_numeric_field int,

                     first_string_field varchar(50),
                     second_string_field varchar(50),
                     third_string_field varchar(50),

                     first_text_field varchar(1000),
                     second_text_field varchar(1000),
                     third_text_field varchar(1000),

                     first_boolean_field boolean,
                     second_boolean_field boolean,
                     third_boolean_field boolean,

                     first_date_field Date,
                     second_date_field Date,
                     third_date_field Date

);

create table Tags(
                    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                    tag varchar(50)

);

create table Items_Tags(
                   item_id int REFERENCES Items(id),
                   tag_id int REFERENCES Tags(id),
                   PRIMARY KEY (item_id,tag_id)

);


create table Comments(
                       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                       item_id int REFERENCES Items(id) On DELETE CASCADE,
                       user_id int REFERENCES Users(id) On DELETE CASCADE,
                       text varchar(300) not null
);

create table Item_Likes(
                         item_id int REFERENCES Items(id),
                         user_id int REFERENCES Users(id),
                         PRIMARY KEY (item_id,user_id)

);







